import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from "react";
import axios from "axios";
import Layout from '../components/layout/main'
import MainSlider from "../components/main-slider";
import Loading from "../components/loading";
import dynamic from "next/dynamic";
import ProductCard from "../components/product-card/ProductCard";

const IsotopeComp = dynamic(() => import("../components/isotope"), { ssr: false });

export default function Home() {
  const [mainSlider, setMainSlider] = useState([]);
  const [filters, setFilters] = useState([]);
  const [isotopeData, setIsotopeData] = useState([]);


  useEffect(() => {

    const fetchProductsData = async () => {
      await axios
        .get(`${window.location.origin}/dummy/dummy-1.json`)
        .then((response) => {
          setIsotopeData(response.data);
          setFilters(response.data.facets);
        })
        .catch((error) => { });
    };

    const fetchMainSliderData = async () => {
      await axios
        .get(`${window.location.origin}/dummy/home/main-slider.json`)
        .then((response) => {
          setMainSlider(response.data.slider_items);
        });
    };
    fetchMainSliderData();
    fetchProductsData();
  }, []);


  const onFilter = (event) => {
    event.preventDefault();
    const {
      target: {
        dataset: { filter },
      },
    } = event;

    setFilters((state) =>
      state.map((f) => {
        if (f.value === filter) {
          return {
            ...f,
            isChecked: true,
          };
        }
        return {
          ...f,
          isChecked: false,
        };
      })
    );
  };

  const getIsotope = () => {
    if (isotopeData.length <= 0) return null;
    return (
      <IsotopeComp data={isotopeData.products} filters={filters}>
        {isotopeData.products.map((product, index) => (
          <ProductCard key={index} product={product} />
        ))}
      </IsotopeComp>
    );
  };

  if (isotopeData.length <= 0) return <Loading />;

  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="ps-main">
        <MainSlider mainSlider={mainSlider} />
        <div className="ps-section--features-product ps-section masonry-root pt-100 pb-100">
          <div className="ps-container">
            <div className="ps-section__header mb-50">
              <h3 className="ps-section__title" data-mask={isotopeData.maskTitle}>
                - {isotopeData.title}
              </h3>
              <ul className="ps-masonry__filter">
                {filters.map((f, index) => (
                  <li className={f.isChecked ? "current" : ""} key={index}>
                    <a href="#" onClick={onFilter} data-filter={f.value}>
                      {f.label}{" "}
                      <sup>
                        {f.value === "*"
                          ? isotopeData.products.length
                          : isotopeData.products
                            .map((product) => {
                              const b = product.filter.filter(
                                (x) => x === f.value
                              ).length;
                              return b;
                            })
                            .reduce((a, b) => a + b, 0)}
                      </sup>
                    </a>
                  </li>
                ))}
              </ul>
            </div>
            <div className="ps-section__content pb-50">
              <div
                className="masonry-wrapper"
                data-col-md={4}
                data-col-sm={2}
                data-col-xs={1}
                data-gap={30}
                data-radio="100%"
              >
                {getIsotope()}
              </div>
            </div>
          </div>
        </div>
      </div>

      <main className={styles.main}>
        <div className='test'>
          <h1 className='a'>DENEME</h1>
        </div>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </Layout>
  )
}
